"use strict";(self.webpackChunk_yoskutik_mobx_form_schema_docs=self.webpackChunk_yoskutik_mobx_form_schema_docs||[]).push([[257],{4831:function(e,t,n){let a,r,i,c,s,o;n.d(t,{d:function(){return u}});var l,h=n(8816),d=function(e,t,n,a,r,i){function c(e){if(void 0!==e&&"function"!=typeof e)throw TypeError("Function expected");return e}for(var s,o=a.kind,l="getter"===o?"get":"setter"===o?"set":"value",h=!t&&e?a.static?e:e.prototype:null,d=t||(h?Object.getOwnPropertyDescriptor(h,a.name):{}),m=!1,u=n.length-1;u>=0;u--){var f={};for(var p in a)f[p]="access"===p?{}:a[p];for(var p in a.access)f.access[p]=a.access[p];f.addInitializer=function(e){if(m)throw TypeError("Cannot add initializers after decoration has completed");i.push(c(e||null))};var v=(0,n[u])("accessor"===o?{get:d.get,set:d.set}:d[l],f);if("accessor"===o){if(void 0===v)continue;if(null===v||"object"!=typeof v)throw TypeError("Object expected");(s=c(v.get))&&(d.get=s),(s=c(v.set))&&(d.set=s),(s=c(v.init))&&r.unshift(s)}else(s=c(v))&&("field"===o?r.unshift(s):d[l]=s)}h&&Object.defineProperty(h,a.name,d),m=!0},m=function(e,t,n){for(var a=arguments.length>2,r=0;r<t.length;r++)n=a?t[r].call(e,n):t[r].call(e);return a?n:void 0};let u=(i=h.FormSchema,c=[],s=[],o=[],l=class extends i{constructor(){super(...arguments),this.name=(m(this,c),m(this,s,"Joe")),this.surname=m(this,o,"Dough")}},(()=>{var e;let t="function"==typeof Symbol&&Symbol.metadata?Object.create(null!==(e=i[Symbol.metadata])&&void 0!==e?e:null):void 0;a=[h.watch],r=[h.watch],d(null,null,a,{kind:"field",name:"name",static:!1,private:!1,access:{has:e=>"name"in e,get:e=>e.name,set:(e,t)=>{e.name=t}},metadata:t},s,c),d(null,null,r,{kind:"field",name:"surname",static:!1,private:!1,access:{has:e=>"surname"in e,get:e=>e.surname,set:(e,t)=>{e.surname=t}},metadata:t},o,c),t&&Object.defineProperty(l,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:t})})(),l)},4257:function(e,t,n){n.r(t),n.d(t,{default:function(){return u}});var a=n(8993),r=n(1568),i={filename:"ManualExample.tsx",code:'import { observer } from \'mobx-react\';\r\nimport { useMemo } from \'react\';\r\nimport { Button, TextField } from \'@components\';\r\nimport { SchemaObservationInfo } from \'../SchemaObservationInfo\';\r\nimport { ObservationButtons } from \'../ObservationButtons\';\r\nimport { BasicSchema } from \'../BasicObservation/BasicSchema\';\r\n\r\nexport const ManualExample = observer(() => {\r\n  const schema = useMemo(() => BasicSchema.create({}, true), []);\r\n\r\n  const handleSaveClick = () => {\r\n    schema.sync();\r\n  };\r\n\r\n  const handleRestoreClick = () => {\r\n    schema.reset();\r\n  };\r\n\r\n  const handleCheckNameClick = () => {\r\n    schema.updateIsPropertyChanged(\'name\');\r\n  };\r\n\r\n  const handleCheckAllClick = () => {\r\n    schema.updateIsChangedAny();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TextField schema={schema} field="name" label="Name" />\r\n      <TextField schema={schema} field="surname" label="Surname" />\r\n\r\n      <div style={{ marginBottom: 12 }}>\r\n        <Button onClick={handleCheckNameClick} variant="secondary" size="s">\r\n          Check name\r\n        </Button>\r\n        <Button onClick={handleCheckAllClick} variant="secondary" size="s" style={{ marginLeft: 12 }}>\r\n          Check all\r\n        </Button>\r\n      </div>\r\n\r\n      <ObservationButtons\r\n        onRestore={handleRestoreClick}\r\n        onSave={handleSaveClick}\r\n        schema={schema}\r\n      />\r\n\r\n      <SchemaObservationInfo schema={schema} />\r\n    </div>\r\n  );\r\n});\r\n'},c=n(4309),s=n(8379),o=n(4133),l=n(858),h=n(4831);let d=(0,c.Pi)(()=>{let e=(0,s.useMemo)(()=>h.d.create({},!0),[]),t=()=>{e.sync()},n=()=>{e.reset()},i=()=>{e.updateIsPropertyChanged("name")},c=()=>{e.updateIsChangedAny()};return(0,a.BX)("div",{children:[(0,a.tZ)(r.nv,{schema:e,field:"name",label:"Name"}),(0,a.tZ)(r.nv,{schema:e,field:"surname",label:"Surname"}),(0,a.BX)("div",{style:{marginBottom:12},children:[(0,a.tZ)(r.zx,{onClick:i,variant:"secondary",size:"s",children:"Check name"}),(0,a.tZ)(r.zx,{onClick:c,variant:"secondary",size:"s",style:{marginLeft:12},children:"Check all"})]}),(0,a.tZ)(l.A,{onRestore:n,onSave:t,schema:e}),(0,a.tZ)(o.E,{schema:e})]})}),m=()=>(0,a.BX)(a.HY,{children:[(0,a.BX)(r.$0,{title:"Manual form changes check",children:[(0,a.tZ)(r.xv,{children:"Just like with validation, you can stop checking your form changes automatically and make these checks manually. On order to do it, you just have to create the schema in the manual mode."}),(0,a.tZ)(r.KE,{items:[{filename:"ManualExample.ts",code:"const schema = BasicSchema.create({}, true);"}]}),(0,a.BX)(r.xv,{children:["And then, to make a check for a property, you can call the ",(0,a.tZ)(r.EK,{children:"updateIsPropertyChanged"})," method and pass the name of the property. This method will update the ",(0,a.tZ)(r.EK,{children:"changedProperties"})," set and return a boolean, which tells if the property is different from the initial state."]}),(0,a.BX)(r.xv,{children:["Alternatively, you can call the ",(0,a.tZ)(r.EK,{children:"updateIsChangedAny"})," method to check the schema entirely. This method updates the ",(0,a.tZ)(r.EK,{children:"changedProperties"})," set as well."]}),(0,a.tZ)(r.KE,{items:[i],children:(0,a.tZ)(d,{})})]}),(0,a.tZ)(r.$0,{title:"Next",forcedLevel:3,children:(0,a.tZ)(r.xv,{children:"Read about how you can create form schemas with the data from the backend and how you can simplify your communication with the backend in the next articles."})})]});var u=m},858:function(e,t,n){n.d(t,{A:function(){return c}});var a=n(8993),r=n(4309),i=n(1568);let c=(0,r.Pi)(({schema:e,onRestore:t,onSave:n})=>(0,a.BX)("div",{style:{marginTop:12},children:[(0,a.tZ)(i.zx,{variant:"primary",onClick:n,disabled:!e.isChanged,children:"Save"}),(0,a.tZ)(i.zx,{onClick:t,disabled:!e.isChanged,style:{marginLeft:12},variant:"primary",children:"Restore"})]}))},4133:function(e,t,n){n.d(t,{E:function(){return s}});var a=n(8993),r=n(4309),i=n(75),c={root:"HQPJ",pre:"gwvf",preItem:"FVu9"};let s=(0,r.Pi)(({schema:e})=>{let t=e=>{let t=(0,i.ZN)(e);return JSON.stringify(t instanceof Set?[...t]:t,void 0,2)};return(0,a.BX)("div",{className:c.root,children:[(0,a.BX)("span",{children:["Is form changed: ",e.isChanged.toString()]}),(0,a.BX)("div",{className:c.pre,children:["Changed properties: ",t(e.changedProperties)]}),(0,a.BX)("div",{className:c.pre,children:["Initial properties properties:",Object.keys(e).map(n=>(0,a.BX)("div",{className:c.preItem,children:[n,": ",t(e.getInitial(n))]},n))]})]})})}}]);