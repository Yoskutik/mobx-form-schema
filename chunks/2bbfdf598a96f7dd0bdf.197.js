"use strict";(self.webpackChunk_yoskutik_mobx_form_schema_docs=self.webpackChunk_yoskutik_mobx_form_schema_docs||[]).push([[197],{4105:function(e,t,a){a.d(t,{C1:function(){return r},Do:function(){return i},Ei:function(){return o},b6:function(){return n}});let r=()=>e=>(null==e||!e.trim())&&"This field is required.",i=()=>e=>!/\S+@\S+\.\S+/.test(e)&&"Invalid email format.",n=()=>e=>!/^[a-zA-Z0-9_]+$/.test(e)&&"You can use only latin letters, digits and underscore sign.",o=e=>t=>t.length<e&&`Should be at least ${e} characters.`},4922:function(e,t,a){let r,i,n,o,s,l;a.d(t,{l:function(){return p}});var d,c=a(8816),m=a(4105),h=function(e,t,a,r,i,n){function o(e){if(void 0!==e&&"function"!=typeof e)throw TypeError("Function expected");return e}for(var s,l=r.kind,d="getter"===l?"get":"setter"===l?"set":"value",c=!t&&e?r.static?e:e.prototype:null,m=t||(c?Object.getOwnPropertyDescriptor(c,r.name):{}),h=!1,u=a.length-1;u>=0;u--){var f={};for(var p in r)f[p]="access"===p?{}:r[p];for(var p in r.access)f.access[p]=r.access[p];f.addInitializer=function(e){if(h)throw TypeError("Cannot add initializers after decoration has completed");n.push(o(e||null))};var v=(0,a[u])("accessor"===l?{get:m.get,set:m.set}:m[d],f);if("accessor"===l){if(void 0===v)continue;if(null===v||"object"!=typeof v)throw TypeError("Object expected");(s=o(v.get))&&(m.get=s),(s=o(v.set))&&(m.set=s),(s=o(v.init))&&i.unshift(s)}else(s=o(v))&&("field"===l?i.unshift(s):m[d]=s)}c&&Object.defineProperty(c,r.name,m),h=!0},u=function(e,t,a){for(var r=arguments.length>2,i=0;i<t.length;i++)a=r?t[i].call(e,a):t[i].call(e);return r?a:void 0};let f=()=>(e,t)=>e!==t.password&&"Passwords mismatched",p=(n=c.FormSchema,o=[],s=[],l=[],d=class extends n{constructor(){super(...arguments),this.password=(u(this,o),u(this,s,"")),this.confirmPassword=u(this,l,"")}},(()=>{var e;let t="function"==typeof Symbol&&Symbol.metadata?Object.create(null!==(e=n[Symbol.metadata])&&void 0!==e?e:null):void 0;r=[(0,c.validate)((0,m.C1)(),(0,m.Ei)(8)),c.watch],i=[(0,c.validate)((0,m.C1)(),f()),c.watch],h(null,null,r,{kind:"field",name:"password",static:!1,private:!1,access:{has:e=>"password"in e,get:e=>e.password,set:(e,t)=>{e.password=t}},metadata:t},s,o),h(null,null,i,{kind:"field",name:"confirmPassword",static:!1,private:!1,access:{has:e=>"confirmPassword"in e,get:e=>e.confirmPassword,set:(e,t)=>{e.confirmPassword=t}},metadata:t},l,o),t&&Object.defineProperty(d,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:t})})(),d)},3197:function(e,t,a){let r,i,n,o,s,l,d,c;a.r(t),a.d(t,{default:function(){return T}});var m,h=a(8993),u=a(1568),f={filename:"ComplexExample.tsx",code:'import { observer } from \'mobx-react\';\r\nimport { useMemo } from \'react\';\r\nimport { TextField } from \'@components\';\r\nimport { ComplexSchema } from \'./ComplexSchema\';\r\n\r\nexport const ComplexExample = observer(() => {\r\n  const schema = useMemo(() => ComplexSchema.create(), []);\r\n\r\n  return (\r\n    <div>\r\n      <TextField schema={schema} field="password" type="password" required label="Password" />\r\n      <TextField\r\n        label="Confirm your password"\r\n        field="confirmPassword"\r\n        schema={schema}\r\n        type="password"\r\n        required\r\n      />\r\n      <span>Is form valid: {schema.isValid.toString()}</span>\r\n      <pre style={{ whiteSpace: \'pre-wrap\' }}>\r\n        Form errors: {JSON.stringify(schema.errors, undefined, 2)}\r\n      </pre>\r\n    </div>\r\n  );\r\n});\r\n'},p={filename:"ComplexSchema.ts",code:"import { FormSchema, validate, watch } from '@yoskutik/mobx-form-schema';\r\nimport { minLength, required } from '../../LearnStartPage/validators';\r\n\r\nconst confirmPassword = () => (\r\n  (confirmPasswordValue: string, schema: ComplexSchema): boolean | string => {\r\n    if (confirmPasswordValue === schema.password) return false;\r\n    return 'Passwords mismatched';\r\n  }\r\n);\r\n\r\nexport class ComplexSchema extends FormSchema {\r\n  @validate(required(), minLength(8))\r\n  @watch password = '';\r\n\r\n  @validate(required(), confirmPassword())\r\n  @watch confirmPassword = '';\r\n}\r\n"},v={filename:"ConditionalSchema.ts",code:"import { FormSchema, validate, watch } from '@yoskutik/mobx-form-schema';\r\nimport { email, required } from '../../LearnStartPage/validators';\r\n\r\nconst shouldValidateEmail = (emailValue: string) => !!emailValue;\r\n\r\nconst shouldValidatePetName = (name: string, schema: ConditionalSchema) => schema.doesHavePet;\r\n\r\nexport class ConditionalSchema extends FormSchema {\r\n  // or it can be @validate.if(Boolean, [email()])\r\n  @validate.if(shouldValidateEmail, [email()])\r\n  @watch email = '';\r\n\r\n  @watch doesHavePet = false;\r\n\r\n  @validate.if(shouldValidatePetName, [required()])\r\n  @watch petName = '';\r\n}\r\n"},y={filename:"ConditionalExample.tsx",code:'import { observer } from \'mobx-react\';\r\nimport { useMemo } from \'react\';\r\nimport { CheckboxField, TextField } from \'@components\';\r\nimport { ConditionalSchema } from \'./ConditionalSchema\';\r\n\r\nexport const ConditionalExample = observer(() => {\r\n  const schema = useMemo(() => ConditionalSchema.create(), []);\r\n\r\n  return (\r\n    <div>\r\n      <TextField schema={schema} field="email" type="email" label="E-mail" />\r\n      <CheckboxField schema={schema} field="doesHavePet" label="I have a pet" />\r\n      {schema.doesHavePet && (\r\n        <TextField schema={schema} label="Pet\'s name" field="petName" required />\r\n      )}\r\n      <span>Is form valid: {schema.isValid.toString()}</span>\r\n      <pre style={{ whiteSpace: \'pre-wrap\' }}>\r\n        Form errors: {JSON.stringify(schema.errors, undefined, 2)}\r\n      </pre>\r\n    </div>\r\n  );\r\n});\r\n'},w=a(4309),b=a(8379),g=a(4922);let x=(0,w.Pi)(()=>{let e=(0,b.useMemo)(()=>g.l.create(),[]);return(0,h.BX)("div",{children:[(0,h.tZ)(u.nv,{schema:e,field:"password",type:"password",required:!0,label:"Password"}),(0,h.tZ)(u.nv,{label:"Confirm your password",field:"confirmPassword",schema:e,type:"password",required:!0}),(0,h.BX)("span",{children:["Is form valid: ",e.isValid.toString()]}),(0,h.BX)("pre",{style:{whiteSpace:"pre-wrap"},children:["Form errors: ",JSON.stringify(e.errors,void 0,2)]})]})});var S=a(8816),P=a(4105),C=function(e,t,a,r,i,n){function o(e){if(void 0!==e&&"function"!=typeof e)throw TypeError("Function expected");return e}for(var s,l=r.kind,d="getter"===l?"get":"setter"===l?"set":"value",c=!t&&e?r.static?e:e.prototype:null,m=t||(c?Object.getOwnPropertyDescriptor(c,r.name):{}),h=!1,u=a.length-1;u>=0;u--){var f={};for(var p in r)f[p]="access"===p?{}:r[p];for(var p in r.access)f.access[p]=r.access[p];f.addInitializer=function(e){if(h)throw TypeError("Cannot add initializers after decoration has completed");n.push(o(e||null))};var v=(0,a[u])("accessor"===l?{get:m.get,set:m.set}:m[d],f);if("accessor"===l){if(void 0===v)continue;if(null===v||"object"!=typeof v)throw TypeError("Object expected");(s=o(v.get))&&(m.get=s),(s=o(v.set))&&(m.set=s),(s=o(v.init))&&i.unshift(s)}else(s=o(v))&&("field"===l?i.unshift(s):m[d]=s)}c&&Object.defineProperty(c,r.name,m),h=!0},Z=function(e,t,a){for(var r=arguments.length>2,i=0;i<t.length;i++)a=r?t[i].call(e,a):t[i].call(e);return r?a:void 0};let k=e=>!!e,F=(e,t)=>t.doesHavePet,B=(o=S.FormSchema,s=[],l=[],d=[],c=[],m=class extends o{constructor(){super(...arguments),this.email=(Z(this,s),Z(this,l,"")),this.doesHavePet=Z(this,d,!1),this.petName=Z(this,c,"")}},(()=>{var e;let t="function"==typeof Symbol&&Symbol.metadata?Object.create(null!==(e=o[Symbol.metadata])&&void 0!==e?e:null):void 0;r=[S.validate.if(k,[(0,P.Do)()]),S.watch],i=[S.watch],n=[S.validate.if(F,[(0,P.C1)()]),S.watch],C(null,null,r,{kind:"field",name:"email",static:!1,private:!1,access:{has:e=>"email"in e,get:e=>e.email,set:(e,t)=>{e.email=t}},metadata:t},l,s),C(null,null,i,{kind:"field",name:"doesHavePet",static:!1,private:!1,access:{has:e=>"doesHavePet"in e,get:e=>e.doesHavePet,set:(e,t)=>{e.doesHavePet=t}},metadata:t},d,s),C(null,null,n,{kind:"field",name:"petName",static:!1,private:!1,access:{has:e=>"petName"in e,get:e=>e.petName,set:(e,t)=>{e.petName=t}},metadata:t},c,s),t&&Object.defineProperty(m,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:t})})(),m),E=(0,w.Pi)(()=>{let e=(0,b.useMemo)(()=>B.create(),[]);return(0,h.BX)("div",{children:[(0,h.tZ)(u.nv,{schema:e,field:"email",type:"email",label:"E-mail"}),(0,h.tZ)(u.ji,{schema:e,field:"doesHavePet",label:"I have a pet"}),e.doesHavePet&&(0,h.tZ)(u.nv,{schema:e,label:"Pet's name",field:"petName",required:!0}),(0,h.BX)("span",{children:["Is form valid: ",e.isValid.toString()]}),(0,h.BX)("pre",{style:{whiteSpace:"pre-wrap"},children:["Form errors: ",JSON.stringify(e.errors,void 0,2)]})]})}),X=()=>(0,h.BX)(h.HY,{children:[(0,h.BX)(u.$0,{title:"Complex validation",children:[(0,h.BX)(u.xv,{children:["Sometimes the validity of a certain field depends not only on the value of this field, but also on a value of some other field. For example, a value of ",(0,h.tZ)("i",{children:'"Confirm password"'})," field must be the same as a value of ",(0,h.tZ)("i",{children:'"Password"'})," field. Or if a form has separate fields for specifying a month and a year, you'll have  to take both values into account to understand is it happening before or after the desired date."]}),(0,h.tZ)(u.xv,{children:"Also, the validation may be conditional. For example, a form can contain an optional field for an email, and email validity must be checked only if the value is not empty. In addition, the condition can depend on other fields' values."}),(0,h.BX)(u.$0,{title:"Validation dependent on entire schema",children:[(0,h.tZ)(u.xv,{children:"Each validation rule takes 2 arguments."}),(0,h.BX)(u.aV,{variant:"ol",children:[(0,h.BX)("li",{children:["The 1",(0,h.tZ)("sup",{children:"st"})," one is a value of a field the rule was applied on."]}),(0,h.BX)("li",{children:["The 2",(0,h.tZ)("sup",{children:"nd"})," one is an entire schema."]})]}),(0,h.tZ)(u.xv,{children:"So, if you want to create a validation rule, that should use a another value from a schema, you must simply use the second argument."}),(0,h.tZ)(u.KE,{items:[p,f,u.yH,u.Pe],children:(0,h.tZ)(x,{})})]}),(0,h.BX)(u.$0,{title:"Conditional validation",children:[(0,h.tZ)(u.xv,{children:"You can write not only validation rules, but also validation conditions. The validation condition must be a function, that receives 2 parameters — the current value of the field and the entire schema — and returns a boolean that tells whether the validation must be applied or not."}),(0,h.BX)(u.xv,{children:["If a condition returns ",(0,h.tZ)(u.EK,{children:"false"}),", the property will be validated. If not, the validation is skipped, and the property is considered to be valid."]}),(0,h.BX)(u.aV,{variant:"ol",children:[(0,h.BX)("li",{children:["The 1",(0,h.tZ)("sup",{children:"st"})," one is a value of a field the rule was applied on."]}),(0,h.BX)("li",{children:["The 2",(0,h.tZ)("sup",{children:"nd"})," one is an entire schema."]})]}),(0,h.tZ)(u.xv,{children:"So, if you want to create a validation rule, that should use an another value from a schema, you must simply use the second argument."}),(0,h.BX)(u.xv,{children:["To start applying conditional validation, you have to use ",(0,h.tZ)(u.EK,{children:"@validate.if"})," decorator."]}),(0,h.tZ)(u.KE,{items:[v,y,u.yH,u.NH,u.Pe],children:(0,h.tZ)(E,{})})]}),(0,h.tZ)(u.$0,{title:"How does it update?",children:(0,h.BX)(u.xv,{children:["From the previous article, you knew that the validation in MobX Form Schema is applied using ",(0,h.tZ)(u.EK,{children:"autorun"})," function from MobX. Basically, it means that if the validation depends on some properties from the schema or if the validation condition depends on some properties from the schema, the validation will be recalculated each time any of those properties are changed. And you don't have to do it manually."]})})]}),(0,h.tZ)(u.$0,{title:"Next",forcedLevel:3,children:(0,h.tZ)(u.xv,{children:"But you may wonder, is there a way to disable such behavior of recalculating the validation each time and validate the form manually? There is one, and you can read about it in the next article."})})]});var T=X}}]);