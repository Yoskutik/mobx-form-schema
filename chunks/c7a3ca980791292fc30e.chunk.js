"use strict";(self.webpackChunk_yoskutik_react_vvm_docs=self.webpackChunk_yoskutik_react_vvm_docs||[]).push([[632],{4632:function(e,t,n){n.r(t),n.d(t,{default:function(){return tS}});var a,s,o,r,i=n(2322),l=n(2784),c=n(3422),m=n(3853),d=n(8434),h=n(6027),f=n(7764),u=n(9730);let p=(0,f.ZP)(c.Z)`
  background-color: rgba(0, 0, 0, 0.03);
  justify-content: center;
  padding: 32px 0;
  display: flex;
`,x=({title:e,titleActions:t,children:n})=>(0,i.jsx)(u.de,Object.assign({sx:{backgroundColor:"rgba(0, 0, 0, 0.03)",p:"32px 0"}},{children:(0,i.jsxs)(h.Z,Object.assign({sx:{maxWidth:"min(1100px, 95vw)",flexDirection:"column",display:"flex",m:"0 auto",p:{xs:2,sm:4,md:6}}},{children:[(0,i.jsxs)(u.dy,Object.assign({flexWrap:"wrap"},{children:[(0,i.jsx)(d.Z,Object.assign({variant:"h2",sx:{mr:3}},{children:e})),t]})),n]}))}));var b=n(75),g=n(124),j=n(799),y=n(5254);let v=(0,f.ZP)("div")`
  padding: 4px 8px;
  border-bottom: 1px solid transparent;
  margin-bottom: -1px;
  margin-right: 4px;
  cursor: pointer;
  color: #fff;
  
  &:hover {
    border-color: rgba(255, 255, 255, 0.5);
    background: rgba(255, 255, 255, 0.05);
  }
  
  &.active {
    background: rgba(255, 255, 255, 0.2);
    border-color: white;
  }
`,S=(0,f.ZP)(c.Z)`
  display: flex;
  padding: 16px 16px 0 16px;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
  overflow: auto;

  &::-webkit-scrollbar {
    display: none; /* Chrome, Safari, and Opera */
  }
`,O=(0,f.ZP)(c.Z)`
  box-shadow: rgba(0, 0, 0, 0.1) 0 1px 4px 0;
  border-radius: 8px;
  margin-top: 32px;
  overflow: hidden;
  display: flex;
  
  .right-side {
    border: 1px solid rgba(0, 0, 0, 0.6);
    border-radius: 0 8px 8px 0;
    flex-shrink: 0;
    background: #fff;
    width: 300px;
    padding: 12px;
  }

  @media screen and (max-width: 1024px) {
    flex-direction: column;

    .right-side {
      border-radius: 0 0 8px 8px;
      display: flex;
      width: 100%;

      form {
        width: min(50%, 300px);
        margin-right: 20px;
      }

      & > * {
        overflow: hidden;
      }
    }
  }

  @media screen and (max-width: 464px) {
    flex-direction: column;

    .right-side {
      flex-direction: column;

      form {
        width: 100%;
        margin-right: 0;
      }
    }
  }
`,w=({items:e,children:t})=>{let[n,a]=(0,l.useState)(e[0]),s=e=>t=>{a(e);let n=t.target,s=n.parentElement;console.log(n.offsetLeft-s.offsetLeft),s.scroll({left:n.offsetLeft-s.offsetLeft-50,behavior:"smooth"})};return(0,i.jsxs)(O,{children:[(0,i.jsxs)(u.de,Object.assign({sx:{background:"rgb(40, 42, 54)",overflow:"hidden",flex:1}},{children:[(0,i.jsx)(S,{children:e.map(e=>(0,i.jsx)(v,Object.assign({className:e===n?"active":void 0,onClick:s(e)},{children:e.filename}),e.filename))}),(0,i.jsx)(u.oP,{code:n.code,style:{height:400,minHeight:"100%"},sx:{flex:1}})]})),(0,i.jsx)("div",Object.assign({className:"right-side"},{children:t}))]})},F=Object,B=Reflect,k=(e,t)=>B.getMetadata(e,t)||{},R=(e,t)=>F.assign({},k(e,t)),C=(e,t,n)=>B.defineMetadata(e,t,n),P=e=>Symbol(`FormSchema::${e}`),T=P("Factory"),N=P("Watch"),I=P("Validate"),D=P("Presentation"),E=P("InitialValues"),Z=P("Errors"),V=P("ChangedKeys"),A=function(){let e=Array.from(arguments),t=(t,n)=>{let a=R(I,t);a[n]={validators:e},C(I,a,t)};return t.if=e=>(n,a)=>{t(n,a),k(I,n)[a].condition=e},t},H=e=>(e&&e.sync(),e),M=e=>(e&&e.reset(),e),L=(e,t)=>{if(e&&e.isChanged)return!1;if(e===t)return!0;if(e&&t&&e.constructor===t.constructor){let n=k(N,e);for(let a in n){let s=n[a];if(s.comparator?!s.comparator(e[a],t[a]):t[a]!==e[a])return(0,b.z)(()=>e[E]=t[E]),!1}return!0}return!1},z=(e,t)=>{let n=R(N,e);n[t]={},C(N,n,e)},$=(e,t,n)=>(a,s)=>{let o=R(N,a);o[s]={comparator:e,saveFn:t,restoreFn:n},C(N,o,a)};z.configure=$,z.schema=$(L,H,M),z.schemasArray=$((e,t)=>t.length===e.length&&e.every((e,n)=>L(e,t[n])),e=>e.map(H),e=>e.map(M)),z.array=$((e,t)=>e===t||e&&t&&e.length===t.length&&e.every((e,n)=>e===t[n]),e=>e.slice(),e=>e.slice()),z.set=$((e,t)=>e===t||e&&t&&e.size===t.size&&Array.from(e).every(e=>t.has(e)),e=>new Set(e),e=>new Set(e));let K=e=>(t,n)=>{let a=R(D,t);a[n]=e,C(D,a,t)};class q{static create(e={}){let t=new this(e);(0,b.bi)(t)||(0,b.rC)(t);let n=k(I,t),a=k(T,t),s=k(N,t);for(let n of new Set(F.keys(a).concat(F.keys(e)))){let s=a[n];t[n]=s?s(e):e[n]}let o={},r={};for(let e in s)(0,b.wn)(t,e)||(o[e]=t[e],r[e]=b.LO);for(let e in Object.keys(r).length&&(0,b.dw)(t,o,r),s){let n=s[e];t[E][e]=n.saveFn?n.saveFn(t[e],t):t[e]}for(let e in s){let n;let a=s[e].comparator;(0,b.N7)(t,e,()=>{n&&n(),n=(0,b.EH)(()=>{let n=t[e],s=t[E][e],o=a?a(n,s):s===n;(0,b.z)(()=>t[V][o?"delete":"add"](e))})},!0)}for(let e in n){let{validators:a,condition:s}=n[e];(0,b.EH)(()=>{let n;if(s&&!s(t[e],t)){(0,b.z)(()=>delete t[Z][e]);return}let o=t[e];for(let e of a)if(n=e(o,t))break;(0,b.z)(()=>{"string"==typeof n||!0===n?t[Z][e]=n:delete t[Z][e]})})}return t}get presentation(){let e=k(D,this),t={};for(let n in this)t[n]=e[n]?e[n](this[n],this):this[n];return t}get isChanged(){return this[V].size>0}get isValid(){return F.values(this[Z]).every(e=>!e)}get errors(){return this[Z]}getInitial(e){return this[E][e]}sync(){let e={},t=k(N,this);for(let n in t){let a=t[n];e[n]=a.saveFn?a.saveFn(this[n],this):this[n]}this[E]=e}reset(){let e=k(N,this);for(let t of this[V]){let n=this[E][t],a=e[t];this[t]=a&&a.restoreFn?a.restoreFn(n):n}}constructor(){this[s]={},this[o]=new Set,this[r]={}}}s=Z,o=V,r=E;let J=function(e,t,n){let a=q.prototype,s=B.decorate(e,a,t,n);return s&&F.defineProperty(a,t,s),s},W=(e,t)=>B.metadata(`design:${e}`,t),Y=e=>W("type",e),_=()=>W("paramtypes",[]),X=(e,t)=>J([t,Y(F)],e,void 0),G=e=>J([b.Fl,Y(Boolean),_()],e,null),Q=e=>J([b.aD,Y(Function),_(),W("returntype",void 0)],e,null);X(Z,b.LO),X(E,b.LO.ref),X(V,b.LO),G("presentation"),G("isChanged"),G("isValid"),G("errors"),Q("sync"),Q("reset");let U=()=>e=>(null==e||!e.trim())&&"This field is required",ee=()=>e=>!/\S+@\S+\.\S+/.test(e)&&"Invalid email format",et=e=>t=>!(t.length>=e)&&`The value should be at least ${e} symbols`;var en=function(e,t,n,a){var s,o=arguments.length,r=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,a);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(o<3?s(r):o>3?s(t,n,r):s(t,n))||r);return o>3&&r&&Object.defineProperty(t,n,r),r},ea=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};class es extends q{constructor(){super(...arguments),this.login="",this.password="",this.repeatedPassword=""}}en([A(U()),b.LO,ea("design:type",Object)],es.prototype,"login",void 0),en([A(U(),et(8)),b.LO,ea("design:type",Object)],es.prototype,"password",void 0),en([A(U(),(e,t)=>e!==t.password&&"Passwords mismatched"),b.LO,ea("design:type",Object)],es.prototype,"repeatedPassword",void 0);let eo=()=>{let e=(0,l.useMemo)(()=>es.create(),[]);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("form",Object.assign({onSubmit:t=>{t.preventDefault(),alert(`Is form valid: ${e.isValid}
Errors: ${JSON.stringify(e.errors,void 0,2)}`)},style:{marginBottom:32}},{children:[(0,i.jsx)(u.nv,{schema:e,field:"login",label:"Login"}),(0,i.jsx)(u.nv,{schema:e,field:"password",type:"password",label:"Password"}),(0,i.jsx)(u.nv,{schema:e,field:"repeatedPassword",type:"password",label:"Repeat password"}),(0,i.jsx)(u.dy,Object.assign({className:"form-footer"},{children:(0,i.jsx)(u.zx,Object.assign({type:"submit"},{children:"Submit"}))}))]})),(0,i.jsx)(u.SI,{schema:e,noChanged:!0})]})};var er=function(e,t,n,a){var s,o=arguments.length,r=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,a);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(o<3?s(r):o>3?s(t,n,r):s(t,n))||r);return o>3&&r&&Object.defineProperty(t,n,r),r},ei=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};class el extends q{constructor(){super(...arguments),this.email="",this.name="",this.wantToShareName=!1}}er([A(ee()).if(Boolean),b.LO,ei("design:type",Object)],el.prototype,"email",void 0),er([A(U()).if((e,t)=>t.wantToShareName),b.LO,ei("design:type",Object)],el.prototype,"name",void 0),er([b.LO,ei("design:type",Object)],el.prototype,"wantToShareName",void 0);let ec=()=>{let e=(0,l.useMemo)(()=>el.create(),[]);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("form",Object.assign({onSubmit:t=>{t.preventDefault(),alert(`Is form valid: ${e.isValid}
Errors: ${JSON.stringify(e.errors,void 0,2)}`)},style:{marginBottom:32}},{children:[(0,i.jsx)(u.nv,{schema:e,field:"name",label:"Name"}),(0,i.jsx)(u.nv,{schema:e,field:"email",label:"E-mail"}),(0,i.jsx)(u.ji,{schema:e,field:"wantToShareName",label:"Want to share name"}),(0,i.jsx)(u.dy,Object.assign({className:"form-footer"},{children:(0,i.jsx)("button",Object.assign({type:"submit"},{children:"Submit"}))}))]})),(0,i.jsx)(u.SI,{schema:e,noChanged:!0})]})};var em=function(e,t,n,a){var s,o=arguments.length,r=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,a);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(o<3?s(r):o>3?s(t,n,r):s(t,n))||r);return o>3&&r&&Object.defineProperty(t,n,r),r},ed=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};class eh extends q{constructor(){super(...arguments),this.name="",this.email=""}}em([A(U()),b.LO,ed("design:type",Object)],eh.prototype,"name",void 0),em([A(U(),ee()),b.LO,ed("design:type",Object)],eh.prototype,"email",void 0);let ef=()=>{let e=(0,l.useMemo)(()=>eh.create(),[]);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("form",Object.assign({onSubmit:t=>{t.preventDefault(),alert(`Is form valid: ${e.isValid}
Errors: ${JSON.stringify(e.errors,void 0,2)}`)},style:{marginBottom:32}},{children:[(0,i.jsx)(u.nv,{schema:e,field:"name",label:"Name"}),(0,i.jsx)(u.nv,{schema:e,field:"email",label:"E-mail"}),(0,i.jsx)(u.dy,Object.assign({className:"form-footer"},{children:(0,i.jsx)("button",Object.assign({type:"submit"},{children:"Submit"}))}))]})),(0,i.jsx)(u.SI,{schema:e,noChanged:!0})]})};var eu={filename:"SimpleSchema.ts",code:"import { FormSchema, validate } from '@yoskutik/mobx-form-schema';\nimport { observable } from 'mobx';\nimport { required, email } from '../validators';\n\nexport class SimpleSchema extends FormSchema {\n  @validate(required())\n  @observable name = '';\n\n  @validate(required(), email())\n  @observable email = '';\n}"},ep={filename:"SimpleForm.tsx",code:'import React, { useMemo } from \'react\';\nimport { TextField, SchemaInformer, HFlexBox } from \'@components\';\nimport { SimpleSchema } from \'./SimpleSchema\';\n\nexport const SimpleForm = () => {\n  const schema = useMemo(() => SimpleSchema.create(), []);\n\n  const handleSubmit = (evt: React.FormEvent) => {\n    evt.preventDefault();\n    alert(\n      `Is form valid: ${schema.isValid}\\n` +\n      `Errors: ${JSON.stringify(schema.errors, undefined, 2)}`\n    );\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} style={{ marginBottom: 32 }}>\n        <TextField schema={schema} field="name" label="Name" />\n        <TextField schema={schema} field="email" label="E-mail" />\n\n        <HFlexBox className="form-footer">\n          <button type="submit">Submit</button>\n        </HFlexBox>\n      </form>\n\n      <SchemaInformer schema={schema} noChanged />\n    </>\n  );\n}'},ex={filename:"AdvancedForm.tsx",code:'import React, { useMemo } from \'react\';\nimport { TextField, SchemaInformer, HFlexBox, Button } from \'@components\';\nimport { AdvancedSchema } from \'./AdvancedSchema\';\n\nexport const AdvancedForm = () => {\n  const schema = useMemo(() => AdvancedSchema.create(), []);\n\n  const handleSubmit = (evt: React.FormEvent) => {\n    evt.preventDefault();\n    alert(\n      `Is form valid: ${schema.isValid}\\n` +\n      `Errors: ${JSON.stringify(schema.errors, undefined, 2)}`\n    );\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} style={{ marginBottom: 32 }}>\n        <TextField schema={schema} field="login" label="Login" />\n        <TextField schema={schema} field="password" type="password" label="Password" />\n        <TextField schema={schema} field="repeatedPassword" type="password" label="Repeat password" />\n\n        <HFlexBox className="form-footer">\n          <Button type="submit">Submit</Button>\n        </HFlexBox>\n      </form>\n\n      <SchemaInformer schema={schema} noChanged />\n    </>\n  );\n}'},eb={filename:"AdvancedSchema.ts",code:"import { FormSchema, validate } from '@yoskutik/mobx-form-schema';\nimport { observable } from 'mobx';\nimport { required, minLength } from '../validators';\n\nconst repeatedPassword = () => (repeated: string, schema: AdvancedSchema) => {\n  if (repeated === schema.password) return false;\n  return 'Passwords mismatched';\n};\n\nexport class AdvancedSchema extends FormSchema {\n  @validate(required())\n  @observable login = '';\n\n  @validate(required(), minLength(8))\n  @observable password = '';\n\n  @validate(required(), repeatedPassword())\n  @observable repeatedPassword = '';\n}"},eg={filename:"ConditionalSchema.ts",code:"import { FormSchema, validate } from '@yoskutik/mobx-form-schema';\nimport { observable } from 'mobx';\nimport { email, required } from '../validators';\n\nconst shouldValidateName = (_name: string, schema: ConditionalSchema) =>\n  schema.wantToShareName;\n\nexport class ConditionalSchema extends FormSchema {\n  @validate(email()).if(Boolean)  // or .if(email => !!email)\n  @observable email = '';\n\n  @validate(required()).if(shouldValidateName)\n  @observable name = '';\n\n  @observable wantToShareName = false;\n}"},ej={filename:"ConditionalForm.tsx",code:'import React, { useMemo } from \'react\';\nimport { TextField, SchemaInformer, CheckboxField, HFlexBox } from \'@components\';\nimport { ConditionalSchema } from \'./ConditionalSchema\';\n\nexport const ConditionalForm = () => {\n  const schema = useMemo(() => ConditionalSchema.create(), []);\n\n  const handleSubmit = (evt: React.FormEvent) => {\n    evt.preventDefault();\n    alert(\n      `Is form valid: ${schema.isValid}\\n` +\n      `Errors: ${JSON.stringify(schema.errors, undefined, 2)}`\n    );\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} style={{ marginBottom: 32 }}>\n        <TextField schema={schema} field="name" label="Name" />\n        <TextField schema={schema} field="email" label="E-mail" />\n        <CheckboxField schema={schema} field="wantToShareName" label="Want to share name" />\n\n        <HFlexBox className="form-footer">\n          <button type="submit">Submit</button>\n        </HFlexBox>\n      </form>\n\n      <SchemaInformer schema={schema} noChanged />\n    </>\n  );\n}'},ey={filename:"validators.ts",code:"// Shared file\n\nexport const required = () => (value?: string) => {\n  if (value?.trim()) return false;\n  return 'This field is required';\n};\n\nexport const email = () => (value: string) => {\n  if (/\\S+@\\S+\\.\\S+/.test(value)) return false;\n  return 'Invalid email format';\n};\n\nexport const minLength = (n: number) => (value: string) => {\n  if (value.length >= n) return false;\n  return `The value should be at least ${n} symbols`;\n};"},ev=function(e,t,n,a){var s,o=arguments.length,r=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,a);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(o<3?s(r):o>3?s(t,n,r):s(t,n))||r);return o>3&&r&&Object.defineProperty(t,n,r),r},eS=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let eO=()=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:4}},{children:["You can easy ",(0,i.jsx)("b",{children:"apply any validation function"})," to any of your form fields - just use ",(0,i.jsx)(u.EK,{children:"@validate"})," decorator. You can also apply ",(0,i.jsx)("b",{children:"several functions"})," in order to get different error messages for different validation errors."]})),(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:2}},{children:["And you can easily ",(0,i.jsx)("b",{children:"access the errors"})," of the form and ",(0,i.jsx)("b",{children:"understand whether the entire form is valid"})," or not."]})),(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:2}},{children:["And the most cool part - the ",(0,i.jsx)("b",{children:"validation is applied automatically"}),", when the value of the field is changed."]})),(0,i.jsx)(d.Z,Object.assign({component:"p",sx:{mt:2}},{children:"You can look at the example below to see how MobX Form Schema can be used in React."}))]}),ew=()=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:4}},{children:["Inside a validation function you can use not only current value of the field, but also ",(0,i.jsx)("b",{children:"entire schema as well"}),". It is useful if the validation is depends on other field's value. For example, if you want to make sure that repeated password is equal to the original one."]})),(0,i.jsx)(d.Z,Object.assign({component:"p",sx:{mt:2}},{children:"And it completely automatic as well."}))]}),eF=()=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:4}},{children:["The validation ",(0,i.jsx)("b",{children:"can be applied conditionally"}),". It can be useful in several cases, like turning off the validation for optional fields, if they don't have any value. As it works in the example below - the validation for ",(0,i.jsx)(u.EK,{children:"email"})," field will be applied only if it's not empty."]})),(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:2}},{children:["And you can also ",(0,i.jsx)("b",{children:"make the condition based on entire schema"})," as well. It can be useful, if the condition is based on some other properties of your form. Just as it works in the example below - the validation for ",(0,i.jsx)(u.EK,{children:"name"})," field will be applied only ",(0,i.jsx)("i",{children:"What to share name"})," checkbox is active."]})),(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:2}},{children:["To enable conditional validation simply apply ",(0,i.jsx)(u.EK,{children:"@validate(...).if"})," decorator."]}))]});class eB extends g.ViewModel{constructor(){super(),this.toggleValue="simple",this.handleToggleChange=(e,t)=>{this.toggleValue=t},(0,b.rC)(this)}}ev([b.LO,eS("design:type",String)],eB.prototype,"toggleValue",void 0),ev([b.aD,eS("design:type",Object)],eB.prototype,"handleToggleChange",void 0);let ek=(0,g.view)(eB)(({viewModel:e})=>(0,i.jsxs)(x,Object.assign({title:"Validate it!",titleActions:(0,i.jsxs)(j.Z,Object.assign({value:e.toggleValue,color:"secondary",size:"small",exclusive:!0,onChange:e.handleToggleChange},{children:[(0,i.jsx)(y.Z,Object.assign({value:"simple"},{children:"Simple"})),(0,i.jsx)(y.Z,Object.assign({value:"advanced"},{children:"Advanced"})),(0,i.jsx)(y.Z,Object.assign({value:"conditional"},{children:"Conditional"}))]}))},{children:["simple"===e.toggleValue&&(0,i.jsx)(eO,{}),"advanced"===e.toggleValue&&(0,i.jsx)(ew,{}),"conditional"===e.toggleValue&&(0,i.jsx)(eF,{}),"simple"===e.toggleValue&&(0,i.jsx)(w,Object.assign({items:[eu,ep,ey,u.yH,u.Pe]},{children:(0,i.jsx)(ef,{})})),"advanced"===e.toggleValue&&(0,i.jsx)(w,Object.assign({items:[eb,ex,ey,u.yH,u.Pe]},{children:(0,i.jsx)(eo,{})})),"conditional"===e.toggleValue&&(0,i.jsx)(w,Object.assign({items:[eg,ej,ey,u.yH,u.NH,u.Pe]},{children:(0,i.jsx)(ec,{})}))]})));var eR=function(e,t,n,a){var s,o=arguments.length,r=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,a);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(o<3?s(r):o>3?s(t,n,r):s(t,n))||r);return o>3&&r&&Object.defineProperty(t,n,r),r},eC=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};class eP extends q{constructor(){super(...arguments),this.name="",this.surname="",this.email=""}}eR([z,eC("design:type",Object)],eP.prototype,"name",void 0),eR([z,eC("design:type",Object)],eP.prototype,"surname",void 0),eR([z,eC("design:type",Object)],eP.prototype,"email",void 0);let eT=()=>{let e=(0,l.useMemo)(()=>eP.create(),[]);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("form",Object.assign({onSubmit:t=>{t.preventDefault(),alert(`Is form changed: ${e.isChanged}`)},style:{marginBottom:32}},{children:[(0,i.jsx)(u.nv,{schema:e,field:"name",label:"Name"}),(0,i.jsx)(u.nv,{schema:e,field:"surname",label:"Surname"}),(0,i.jsx)(u.nv,{schema:e,field:"email",label:"E-mail"}),(0,i.jsxs)(u.dy,Object.assign({className:"form-footer"},{children:[(0,i.jsx)(u.zx,Object.assign({type:"submit"},{children:"Submit"})),(0,i.jsx)(u.zx,Object.assign({onClick:()=>e.sync()},{children:"Save"})),(0,i.jsx)(u.zx,Object.assign({onClick:()=>e.reset()},{children:"Restore"}))]}))]})),(0,i.jsx)(u.SI,{schema:e,noErrors:!0})]})},eN=()=>{let e=(0,l.useMemo)(()=>eP.create({name:"Initial name",surname:"Initial surname",email:"initial@email.com"}),[]);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("form",Object.assign({onSubmit:t=>{t.preventDefault(),alert(`Is form changed: ${e.isChanged}`)},style:{marginBottom:32}},{children:[(0,i.jsx)(u.nv,{schema:e,field:"name",label:"Name"}),(0,i.jsx)(u.nv,{schema:e,field:"surname",label:"Surname"}),(0,i.jsx)(u.nv,{schema:e,field:"email",label:"E-mail"}),(0,i.jsxs)(u.dy,Object.assign({className:"form-footer"},{children:[(0,i.jsx)(u.zx,Object.assign({type:"submit"},{children:"Submit"})),(0,i.jsx)(u.zx,Object.assign({onClick:()=>e.sync()},{children:"Save"})),(0,i.jsx)(u.zx,Object.assign({onClick:()=>e.reset()},{children:"Restore"}))]}))]})),(0,i.jsx)(u.SI,{schema:e,noErrors:!0})]})};var eI=function(e,t,n,a){var s,o=arguments.length,r=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,a);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(o<3?s(r):o>3?s(t,n,r):s(t,n))||r);return o>3&&r&&Object.defineProperty(t,n,r),r},eD=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};class eE extends q{constructor(){super(...arguments),this.skillSet=new Set,this.skillArray=[]}}eI([b.LO.shallow,z.set,eD("design:type",Object)],eE.prototype,"skillSet",void 0),eI([b.LO.shallow,z.array,eD("design:type",Array)],eE.prototype,"skillArray",void 0);let eZ=()=>{let e=(0,l.useMemo)(()=>eE.create({skillSet:new Set(["JavaScript","HTML","CSS"]),skillArray:["JavaScript","HTML","CSS"]}),[]);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("form",Object.assign({onSubmit:t=>{t.preventDefault(),alert(`Is form changed: ${e.isChanged}`)},style:{marginBottom:32}},{children:[(0,i.jsx)(u.IG,{schema:e,field:"skillSet",label:"Skills as set"}),(0,i.jsx)(u.IG,{schema:e,field:"skillArray",label:"Skills as array"}),(0,i.jsxs)(u.dy,Object.assign({className:"form-footer"},{children:[(0,i.jsx)(u.zx,Object.assign({type:"submit"},{children:"Submit"})),(0,i.jsx)(u.zx,Object.assign({onClick:()=>e.sync()},{children:"Save"})),(0,i.jsx)(u.zx,Object.assign({onClick:()=>e.reset()},{children:"Restore"}))]}))]})),(0,i.jsx)(u.SI,{schema:e,noErrors:!0})]})};var eV=n(7973),eA=function(e,t,n,a){var s,o=arguments.length,r=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,a);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(o<3?s(r):o>3?s(t,n,r):s(t,n))||r);return o>3&&r&&Object.defineProperty(t,n,r),r},eH=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};class eM extends q{constructor(){super(...arguments),this.email="",this.tel=""}}eA([z,eH("design:type",Object)],eM.prototype,"email",void 0),eA([z,eH("design:type",Object)],eM.prototype,"tel",void 0);class eL extends q{constructor(){super(...arguments),this.name="",this.surname=""}}eA([z,eH("design:type",Object)],eL.prototype,"name",void 0),eA([z,eH("design:type",Object)],eL.prototype,"surname",void 0);class ez extends q{constructor(){super(...arguments),this.contacts=eM.create(),this.relatives=[]}}eA([b.LO.ref,z.schema,eH("design:type",Object)],ez.prototype,"contacts",void 0),eA([b.LO.shallow,z.schemasArray,eH("design:type",Array)],ez.prototype,"relatives",void 0);let e$=(0,eV.Pi)(()=>{let e=(0,l.useMemo)(()=>ez.create({contacts:eM.create({email:"yoskutik@gmail.com"}),relatives:[eL.create({name:"Name 1",surname:"Surname 1"}),eL.create({name:"Name 2",surname:"Surname 2"})]}),[]),t=(0,b.aD)(()=>{e.relatives.push(eL.create())}),n=(0,b.aD)(t=>{e.relatives.splice(t,1)});return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("form",Object.assign({onSubmit:t=>{t.preventDefault(),alert(`Is form changed: ${e.isChanged}`)},style:{marginBottom:32}},{children:[(0,i.jsx)("b",{children:"Contacts"}),(0,i.jsx)(u.nv,{schema:e.contacts,field:"email",label:"E-mail"}),(0,i.jsx)(u.nv,{schema:e.contacts,field:"tel",label:"Phone number"}),(0,i.jsxs)(u.dy,Object.assign({style:{marginTop:16}},{children:[(0,i.jsx)("b",{children:"Relatives"}),(0,i.jsx)(u.zx,Object.assign({onClick:t,size:"s"},{children:"Add"}))]})),e.relatives.map((e,t)=>(0,i.jsxs)(u.de,Object.assign({style:{marginTop:12}},{children:[(0,i.jsxs)(u.dy,{children:[(0,i.jsxs)("span",{children:["Relative: #",t+1]}),(0,i.jsx)(u.zx,Object.assign({onClick:()=>n(t),size:"s"},{children:"Delete"}))]}),(0,i.jsx)(u.nv,{schema:e,field:"name",label:"Name"}),(0,i.jsx)(u.nv,{schema:e,field:"surname",label:"Surname"})]}),t)),(0,i.jsxs)(u.dy,Object.assign({className:"form-footer"},{children:[(0,i.jsx)(u.zx,Object.assign({type:"submit"},{children:"Submit"})),(0,i.jsx)(u.zx,Object.assign({onClick:()=>e.sync()},{children:"Save"})),(0,i.jsx)(u.zx,Object.assign({onClick:()=>e.reset()},{children:"Restore"}))]}))]})),(0,i.jsx)(u.SI,{schema:e,noErrors:!0})]})});var eK={filename:"BasicForm.tsx",code:'import React, { useMemo } from \'react\';\nimport { Button, HFlexBox, SchemaInformer, TextField } from \'@components\';\nimport { BasicSchema } from \'./BasicSchema\';\n\nexport const BasicForm = () => {\n  const schema = useMemo(() => BasicSchema.create(), []);\n\n  const handleSubmit = (evt: React.FormEvent) => {\n    evt.preventDefault();\n    alert(`Is form changed: ${schema.isChanged}`);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} style={{ marginBottom: 32 }}>\n        <TextField schema={schema} field="name" label="Name" />\n        <TextField schema={schema} field="surname" label="Surname" />\n        <TextField schema={schema} field="email" label="E-mail" />\n\n        <HFlexBox className="form-footer">\n          <Button type="submit">Submit</Button>\n          <Button onClick={() => schema.sync()}>Save</Button>\n          <Button onClick={() => schema.reset()}>Restore</Button>\n        </HFlexBox>\n      </form>\n\n      <SchemaInformer schema={schema} noErrors />\n    </>\n  );\n}'},eq={filename:"BasicSchema.ts",code:"import { FormSchema, watch } from '@yoskutik/mobx-form-schema';\n\nexport class BasicSchema extends FormSchema {\n  @watch name = '';\n\n  @watch surname = '';\n\n  @watch email = '';\n}"},eJ={filename:"PredefinedForm.tsx",code:'import React, { useMemo } from \'react\';\nimport { Button, HFlexBox, SchemaInformer, TextField } from \'@components\';\nimport { BasicSchema } from \'../basic/BasicSchema\';\n\nexport const PredefinedForm = () => {\n  const schema = useMemo(() => (\n    BasicSchema.create({\n      name: \'Initial name\',\n      surname: \'Initial surname\',\n      email: \'initial@email.com\',\n    })\n  ), []);\n\n  const handleSubmit = (evt: React.FormEvent) => {\n    evt.preventDefault();\n    alert(`Is form changed: ${schema.isChanged}`);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} style={{ marginBottom: 32 }}>\n        <TextField schema={schema} field="name" label="Name" />\n        <TextField schema={schema} field="surname" label="Surname" />\n        <TextField schema={schema} field="email" label="E-mail" />\n\n        <HFlexBox className="form-footer">\n          <Button type="submit">Submit</Button>\n          <Button onClick={() => schema.sync()}>Save</Button>\n          <Button onClick={() => schema.reset()}>Restore</Button>\n        </HFlexBox>\n      </form>\n\n      <SchemaInformer schema={schema} noErrors />\n    </>\n  );\n}'},eW={filename:"SetsNArraysForm.tsx",code:"import React, { useEffect, useMemo } from 'react';\nimport { Button, ChoiceField, HFlexBox, SchemaInformer } from '@components';\nimport { SetsNArraysSchema } from './SetsNArraysSchema';\n\nexport const SetsNArraysForm = () => {\n  const schema = useMemo(() => (\n    SetsNArraysSchema.create({\n      skillSet: new Set(['JavaScript', 'HTML', 'CSS']),\n      skillArray: ['JavaScript', 'HTML', 'CSS'],\n    })\n  ), []);\n\n  const handleSubmit = (evt: React.FormEvent) => {\n    evt.preventDefault();\n    alert(`Is form changed: ${schema.isChanged}`);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} style={{ marginBottom: 32 }}>\n        <ChoiceField schema={schema} field=\"skillSet\" label=\"Skills as set\" />\n        <ChoiceField schema={schema} field=\"skillArray\" label=\"Skills as array\" />\n\n        <HFlexBox className=\"form-footer\">\n          <Button type=\"submit\">Submit</Button>\n          <Button onClick={() => schema.sync()}>Save</Button>\n          <Button onClick={() => schema.reset()}>Restore</Button>\n        </HFlexBox>\n      </form>\n\n      <SchemaInformer schema={schema} noErrors />\n    </>\n  );\n}"},eY={filename:"SetsNArraysSchema.ts",code:"import { FormSchema, watch } from '@yoskutik/mobx-form-schema';\nimport { observable } from 'mobx';\n\nexport class SetsNArraysSchema extends FormSchema {\n  @observable.shallow\n  @watch.set skillSet = new Set<string>();\n\n  @observable.shallow\n  @watch.array skillArray: string[] = [];\n}"},e_={filename:"NestedSchemasSchema.ts",code:"import { FormSchema, watch } from '@yoskutik/mobx-form-schema';\nimport { observable } from 'mobx';\n\nexport class ContactsSchema extends FormSchema {\n  @watch email = '';\n\n  @watch tel = '';\n}\n\nexport class RelativeSchema extends FormSchema {\n  @watch name = '';\n\n  @watch surname = '';\n}\n\nexport class NestedSchemasSchema extends FormSchema {\n  @observable.ref\n  @watch.schema contacts = ContactsSchema.create();\n\n  @observable.shallow\n  @watch.schemasArray relatives: RelativeSchema[] = [];\n}"},eX={filename:"NestedSchemasForm.tsx",code:'import React, { useMemo } from \'react\';\nimport { action } from \'mobx\';\nimport { observer } from \'mobx-react\';\nimport { Button, HFlexBox, SchemaInformer, TextField, VFlexBox } from \'@components\';\nimport { ContactsSchema, NestedSchemasSchema, RelativeSchema } from \'./NestedSchemasSchema\';\n\nexport const NestedSchemasForm = observer(() => {\n  const schema = useMemo(() => (\n    NestedSchemasSchema.create({\n      contacts: ContactsSchema.create({\n        email: \'yoskutik@gmail.com\',\n      }),\n      relatives: [\n        RelativeSchema.create({\n          name: \'Name 1\',\n          surname: \'Surname 1\',\n        }),\n        RelativeSchema.create({\n          name: \'Name 2\',\n          surname: \'Surname 2\',\n        }),\n      ],\n    })\n  ), []);\n\n  const handleSubmit = (evt: React.FormEvent) => {\n    evt.preventDefault();\n    alert(`Is form changed: ${schema.isChanged}`);\n  };\n\n  const handleAddClick = action(() => {\n    schema.relatives.push(RelativeSchema.create());\n  });\n\n  const handleDeleteClick = action((i: number) => {\n    schema.relatives.splice(i, 1);\n  });\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} style={{ marginBottom: 32 }}>\n        <b>Contacts</b>\n        <TextField schema={schema.contacts} field="email" label="E-mail" />\n        <TextField schema={schema.contacts} field="tel" label="Phone number" />\n\n        <HFlexBox style={{ marginTop: 16 }}>\n          <b>Relatives</b>\n          <Button onClick={handleAddClick} size="s">Add</Button>\n        </HFlexBox>\n\n        {schema.relatives.map((it, i) => (\n          <VFlexBox key={i} style={{ marginTop: 12 }}>\n            <HFlexBox>\n              <span>Relative: #{i + 1}</span>\n              <Button onClick={() => handleDeleteClick(i)} size="s">\n                Delete\n              </Button>\n            </HFlexBox>\n            <TextField schema={it} field="name" label="Name" />\n            <TextField schema={it} field="surname" label="Surname" />\n          </VFlexBox>\n        ))}\n\n        <HFlexBox className="form-footer">\n          <Button type="submit">Submit</Button>\n          <Button onClick={() => schema.sync()}>Save</Button>\n          <Button onClick={() => schema.reset()}>Restore</Button>\n        </HFlexBox>\n      </form>\n\n      <SchemaInformer schema={schema} noErrors />\n    </>\n  );\n})'},eG=function(e,t,n,a){var s,o=arguments.length,r=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,a);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(o<3?s(r):o>3?s(t,n,r):s(t,n))||r);return o>3&&r&&Object.defineProperty(t,n,r),r},eQ=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let eU=()=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:4}},{children:["With ",(0,i.jsx)("i",{children:"MobX Form Schema"})," you can ",(0,i.jsx)("b",{children:"understand whether the content of your form is changed"}),". It can be useful, if you want to disable submit ability if the form is not changed."]})),(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:2}},{children:["Simply apply ",(0,i.jsx)(u.EK,{children:"@watch"})," decorator to the fields you want to observe for changes."]})),(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:2}},{children:["By the way, if you use ",(0,i.jsx)(u.EK,{children:"@watch"}),", the ",(0,i.jsx)(u.EK,{children:"@observable"})," will be applied automatically, so you don't need to use them both. But if you want to use any other observable modifier you must apply it explicitly, like so: ",(0,i.jsx)(u.EK,{children:"@watch @observable.ref"}),"."]})),(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:2}},{children:["And also you don't have to call ",(0,i.jsx)(u.EK,{children:"makeObservable"})," in each of your schemas - it'll be called inside ",(0,i.jsx)(u.EK,{children:"create"})," method. But if you have to create some reactions inside schema's constructor, you can safely use it."]}))]}),e0=()=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:4}},{children:[(0,i.jsx)("b",{children:"It also works with predefined values"}),". And that's extremely helpful, if there's an option to edit forms with predefined values in your project."]})),(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:2}},{children:["In fact, with ",(0,i.jsx)(u.EK,{children:"@watch"}),' decorator you can also restore your form into the initial state or save the current state as the initial - you can try using "Save" and "Restore" buttons in the example below.']}))]}),e2=()=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:4}},{children:["You can observe not only primitive values, but also ",(0,i.jsx)("b",{children:"sets or arrays"})," of primitive values. It can be useful, if you have fields for choosing several items."]})),(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:2}},{children:["Simply apply ",(0,i.jsx)(u.EK,{children:"@watch.set"})," or ",(0,i.jsx)(u.EK,{children:"@watch.array"})," decorator to enable set or array observation."]})),(0,i.jsx)(d.Z,Object.assign({component:"p",sx:{mt:2}},{children:'In the demo below you can try to add or delete some skills. In case of "Skills as set" field - it won\'t be considered changed as long as the final set contains all the values from the initial one. In case of "Skills as array" the items must be at the same position as they are in the initial array to be consider the same.'}))]}),e3=()=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:4}},{children:["Actually, with ",(0,i.jsx)("i",{children:"MobX Form Schema"})," you can always understand whether the form was changed and restore it to the initial state. Even, if you have complex structures in your schemas. You can just use one form schema inside another one."]})),(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:2}},{children:["You can apply ",(0,i.jsx)(u.EK,{children:"@watch.schema"})," decorator, if you want to observe nested schema for changes. You can apply ",(0,i.jsx)(u.EK,{children:"@watch.schemasArray"})," decorator, if you want to observe an array of nested schema for changes."]})),(0,i.jsx)(d.Z,Object.assign({component:"p",sx:{mt:2}},{children:"You can try the demo below. No matter how much data you add, delete or change, as long as the current state is the same as the initial one, the form will not be considered changed. You can try it yourself - for example, you can delete a block for last relative, add one, and then fill it with the same content."}))]});class e1 extends g.ViewModel{constructor(){super(),this.toggleValue="basic",this.handleToggleChange=(e,t)=>{this.toggleValue=t},(0,b.rC)(this)}}eG([b.LO,eQ("design:type",String)],e1.prototype,"toggleValue",void 0),eG([b.aD,eQ("design:type",Object)],e1.prototype,"handleToggleChange",void 0);let e5=(0,g.view)(e1)(({viewModel:e})=>(0,i.jsxs)(x,Object.assign({title:"Observe it!",titleActions:(0,i.jsxs)(j.Z,Object.assign({value:e.toggleValue,color:"secondary",size:"small",exclusive:!0,onChange:e.handleToggleChange},{children:[(0,i.jsx)(y.Z,Object.assign({value:"basic"},{children:"Basic"})),(0,i.jsx)(y.Z,Object.assign({value:"predefined"},{children:"Predefined"})),(0,i.jsx)(y.Z,Object.assign({value:"sets-n-arrays"},{children:"Sets & Arrays"})),(0,i.jsx)(y.Z,Object.assign({value:"nested-schemas"},{children:"Nested schemas"}))]}))},{children:["basic"===e.toggleValue&&(0,i.jsx)(eU,{}),"predefined"===e.toggleValue&&(0,i.jsx)(e0,{}),"sets-n-arrays"===e.toggleValue&&(0,i.jsx)(e2,{}),"nested-schemas"===e.toggleValue&&(0,i.jsx)(e3,{}),["basic","predefined"].includes(e.toggleValue)&&(0,i.jsx)(w,Object.assign({items:[eq,"basic"===e.toggleValue?eK:eJ,u.yH,u.Pe]},{children:"basic"===e.toggleValue?(0,i.jsx)(eT,{}):(0,i.jsx)(eN,{})})),"sets-n-arrays"===e.toggleValue&&(0,i.jsx)(w,Object.assign({items:[eY,eW,u.d6,u.Pe]},{children:(0,i.jsx)(eZ,{})})),"nested-schemas"===e.toggleValue&&(0,i.jsx)(w,Object.assign({items:[e_,eX,u.yH,u.Pe]},{children:(0,i.jsx)(e$,{})}))]})));var e4=function(e,t,n,a){var s,o=arguments.length,r=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,a);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(o<3?s(r):o>3?s(t,n,r):s(t,n))||r);return o>3&&r&&Object.defineProperty(t,n,r),r},e6=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};class e8 extends q{constructor(){super(...arguments),this.field1="Default value 1",this.field2="Default value 1"}}e4([b.LO,e6("design:type",Object)],e8.prototype,"field1",void 0),e4([b.LO,e6("design:type",Object)],e8.prototype,"field2",void 0);let e7=()=>{let e=(0,l.useMemo)(()=>e8.create({field2:"Value from backend"}),[]);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("form",Object.assign({onSubmit:e=>e.preventDefault(),style:{marginBottom:32}},{children:[(0,i.jsx)(u.nv,{schema:e,field:"field1",label:"Field1"}),(0,i.jsx)(u.nv,{schema:e,field:"field2",label:"Field2"}),(0,i.jsx)(u.dy,Object.assign({className:"form-footer"},{children:(0,i.jsx)(u.zx,Object.assign({type:"submit"},{children:"Submit"}))}))]})),(0,i.jsx)(u.SI,{schema:e,noErrors:!0,noChanged:!0})]})};class e9 extends q{constructor(){super(...arguments),this.datetime=new Date}}!function(e,t,n,a){var s,o=arguments.length,r=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,a);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(o<3?s(r):o>3?s(t,n,r):s(t,n))||r);o>3&&r&&Object.defineProperty(t,n,r)}([(a=e=>new Date(e.datetime),(e,t)=>{let n=R(T,e);n[t]=a,C(T,n,e)}),b.LO,function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}("design:type",Object)],e9.prototype,"datetime",void 0);let te=(0,eV.Pi)(()=>{let e=(0,l.useMemo)(()=>e9.create({datetime:"2023-01-01T00:00:00.000Z"}),[]);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("form",Object.assign({onSubmit:e=>e.preventDefault(),style:{marginBottom:32}},{children:[(0,i.jsx)(u.to,{schema:e,field:"datetime",label:"Field1"}),(0,i.jsxs)("div",Object.assign({style:{marginTop:8}},{children:["Is datetime an instance of Date: ",(e.datetime instanceof Date).toString()]})),(0,i.jsx)(u.dy,Object.assign({className:"form-footer"},{children:(0,i.jsx)(u.zx,Object.assign({type:"submit"},{children:"Submit"}))}))]})),(0,i.jsx)(u.SI,{schema:e,noErrors:!0,noChanged:!0})]})});var tt={filename:"DefaultForm.tsx",code:'import React, { useMemo } from \'react\';\nimport { Button, HFlexBox, SchemaInformer, TextField } from \'@components\';\nimport { DefaultSchema } from \'./DefaultSchema\';\n\nexport const DefaultForm = () => {\n  const schema = useMemo(() => (\n    DefaultSchema.create({\n      field2: \'Value from backend\',\n    })\n  ), []);\n\n  return (\n    <>\n      <form onSubmit={evt => evt.preventDefault()} style={{ marginBottom: 32 }}>\n        <TextField schema={schema} field="field1" label="Field1"/>\n        <TextField schema={schema} field="field2" label="Field2"/>\n\n        <HFlexBox className="form-footer">\n          <Button type="submit">Submit</Button>\n        </HFlexBox>\n      </form>\n\n      <SchemaInformer schema={schema} noErrors noChanged />\n    </>\n  );\n}'},tn={filename:"DefaultSchema.ts",code:"import { FormSchema } from '@yoskutik/mobx-form-schema';\nimport { observable } from 'mobx';\n\nexport class DefaultSchema extends FormSchema {\n  @observable field1 = 'Default value 1';\n\n  @observable field2 = 'Default value 1';\n}"},ta={filename:"TransformForm.tsx",code:"import React, { useMemo } from 'react';\nimport { observer } from 'mobx-react';\nimport { Button, HFlexBox, SchemaInformer, DatetimeLocalField } from '@components';\nimport { TransformSchema } from './TransformSchema';\n\nexport const TransformForm = observer(() => {\n  const schema = useMemo(() => (\n    TransformSchema.create({\n      datetime: '2023-01-01T00:00:00.000Z',\n    })\n  ), []);\n\n  return (\n    <>\n      <form onSubmit={evt => evt.preventDefault()} style={{ marginBottom: 32 }}>\n        <DatetimeLocalField schema={schema} field=\"datetime\" label=\"Field1\"/>\n\n        <div style={{ marginTop: 8 }}>\n          Is datetime an instance of Date: {(schema.datetime instanceof Date).toString()}\n        </div>\n\n        <HFlexBox className=\"form-footer\">\n          <Button type=\"submit\">Submit</Button>\n        </HFlexBox>\n      </form>\n\n      <SchemaInformer schema={schema} noErrors noChanged />\n    </>\n  );\n})"},ts={filename:"TransformSchema.ts",code:"import { factory, FormSchema } from '@yoskutik/mobx-form-schema';\nimport { observable } from 'mobx';\n\nexport class TransformSchema extends FormSchema {\n  @factory(data => new Date(data.datetime))\n  @observable datetime = new Date();\n}"},to=function(e,t,n,a){var s,o=arguments.length,r=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,a);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(o<3?s(r):o>3?s(t,n,r):s(t,n))||r);return o>3&&r&&Object.defineProperty(t,n,r),r},tr=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let ti=()=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:4}},{children:["With ",(0,i.jsx)("i",{children:"MobX Form Schema"})," you can also tell how your form should be initialized with specific data. In the examples above you've already seen, how any form schema can be created with predefined values."]})),(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:2}},{children:["In your schema you can set default values for your fields. And also you can pass the data into ",(0,i.jsx)(u.EK,{children:"create"})," static method."]}))]}),tl=()=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:4}},{children:["By default, all the data passed into ",(0,i.jsx)(u.EK,{children:"create"})," static method is applied into your form without any transformation. But it may be useful to transform the data from the server, so it become easier to handle it. For example, if you want to convert date ISO string into ",(0,i.jsx)(u.EK,{children:"Date"})," instance."]})),(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:2}},{children:["To add transform function for any property you should apply ",(0,i.jsx)(u.EK,{children:"@factory"})," decorator."]}))]});class tc extends g.ViewModel{constructor(){super(),this.toggleValue="default",this.handleToggleChange=(e,t)=>{this.toggleValue=t},(0,b.rC)(this)}}to([b.LO,tr("design:type",String)],tc.prototype,"toggleValue",void 0),to([b.aD,tr("design:type",Object)],tc.prototype,"handleToggleChange",void 0);let tm=(0,g.view)(tc)(({viewModel:e})=>(0,i.jsxs)(x,Object.assign({title:"Initialize it!",titleActions:(0,i.jsxs)(j.Z,Object.assign({value:e.toggleValue,color:"secondary",size:"small",exclusive:!0,onChange:e.handleToggleChange},{children:[(0,i.jsx)(y.Z,Object.assign({value:"default"},{children:"Default"})),(0,i.jsx)(y.Z,Object.assign({value:"with-transform"},{children:"With transformation"}))]}))},{children:["default"===e.toggleValue&&(0,i.jsx)(ti,{}),"with-transform"===e.toggleValue&&(0,i.jsx)(tl,{}),"default"===e.toggleValue&&(0,i.jsx)(w,Object.assign({items:[tn,tt,u.yH,u.Pe]},{children:(0,i.jsx)(e7,{})})),"with-transform"===e.toggleValue&&(0,i.jsx)(w,Object.assign({items:[ts,ta,u.A5,u.Pe]},{children:(0,i.jsx)(te,{})}))]})));var td=function(e,t,n,a){var s,o=arguments.length,r=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,a);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(o<3?s(r):o>3?s(t,n,r):s(t,n))||r);return o>3&&r&&Object.defineProperty(t,n,r),r},th=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};class tf extends q{constructor(){super(...arguments),this.name="",this.login="",this.password="",this.repeatedPassword=""}}td([K(e=>null==e?void 0:e.trim()),b.LO,th("design:type",Object)],tf.prototype,"name",void 0),td([A(U()),b.LO,th("design:type",Object)],tf.prototype,"login",void 0),td([A(U(),et(8)),b.LO,th("design:type",Object)],tf.prototype,"password",void 0),td([K(()=>void 0),A(U(),(e,t)=>e!==t.password&&"Passwords mismatched"),b.LO,th("design:type",Object)],tf.prototype,"repeatedPassword",void 0);let tu=()=>{let e=(0,l.useMemo)(()=>tf.create(),[]);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("form",Object.assign({onSubmit:t=>{t.preventDefault(),alert(`Presentation: ${JSON.stringify(e.presentation,void 0,2)}`)},style:{marginBottom:32}},{children:[(0,i.jsx)(u.nv,{schema:e,field:"name",label:"Name"}),(0,i.jsx)(u.nv,{schema:e,field:"login",label:"Login"}),(0,i.jsx)(u.nv,{schema:e,field:"password",type:"password",label:"Password"}),(0,i.jsx)(u.nv,{schema:e,field:"repeatedPassword",type:"password",label:"Repeat password"}),(0,i.jsx)(u.dy,Object.assign({className:"form-footer"},{children:(0,i.jsx)(u.zx,Object.assign({type:"submit"},{children:"Submit"}))}))]})),(0,i.jsx)(u.SI,{schema:e,noChanged:!0})]})};var tp={filename:"PresentationForm.tsx",code:'import React, { useMemo } from \'react\';\nimport { TextField, SchemaInformer, HFlexBox, Button } from \'@components\';\nimport { PresentationSchema } from \'./PresentationSchema\';\n\nexport const PresentationForm = () => {\n  const schema = useMemo(() => PresentationSchema.create(), []);\n\n  const handleSubmit = (evt: React.FormEvent) => {\n    evt.preventDefault();\n    alert(`Presentation: ${JSON.stringify(schema.presentation, undefined, 2)}`);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} style={{ marginBottom: 32 }}>\n        <TextField schema={schema} field="name" label="Name" />\n        <TextField schema={schema} field="login" label="Login" />\n        <TextField schema={schema} field="password" type="password" label="Password" />\n        <TextField schema={schema} field="repeatedPassword" type="password" label="Repeat password" />\n\n        <HFlexBox className="form-footer">\n          <Button type="submit">Submit</Button>\n        </HFlexBox>\n      </form>\n\n      <SchemaInformer schema={schema} noChanged />\n    </>\n  );\n}'},tx={filename:"PresentationSchema.ts",code:"import { FormSchema, presentation, validate } from '@yoskutik/mobx-form-schema';\nimport { observable } from 'mobx';\nimport { required, minLength } from '../Validation/validators';\n\nconst repeatedPassword = () => (repeated: string, schema: PresentationSchema) => {\n  if (repeated === schema.password) return false;\n  return 'Passwords mismatched';\n};\n\nexport class PresentationSchema extends FormSchema {\n  @presentation(value => value?.trim())\n  @observable name = '';\n\n  @validate(required())\n  @observable login = '';\n\n  @validate(required(), minLength(8))\n  @observable password = '';\n\n  @presentation(() => undefined)\n  @validate(required(), repeatedPassword())\n  @observable repeatedPassword = '';\n}"};let tb=()=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:4}},{children:["Each form schema instance have its ",(0,i.jsx)("i",{children:"presentation"})," - an object that contains only data of form's fields without any utility data or methods. This object can be used as final presentation of your form and send to the server."]})),(0,i.jsxs)(d.Z,Object.assign({component:"p",sx:{mt:2}},{children:["But also ",(0,i.jsx)("b",{children:"you can add a transformation function for each property to transform the presentation"}),". For example, you trim your strings, convert Date instances into formatted strings or just delete some data from the presentation."]}))]}),tg=()=>(0,i.jsxs)(x,Object.assign({title:"Present it!"},{children:[(0,i.jsx)(tb,{}),(0,i.jsx)(w,Object.assign({items:[tx,tp,u.yH,u.Pe]},{children:(0,i.jsx)(tu,{})}))]})),tj=()=>(0,i.jsx)(c.Z,Object.assign({sx:{backgroundColor:"rgba(0,0,0,0.03)"}},{children:(0,i.jsxs)(m.ZP,Object.assign({justifyContent:"center",gap:1,container:!0,sx:{width:"1200px",m:"0 auto",p:2,maxWidth:"100%"}},{children:[(0,i.jsx)("img",{src:"https://img.shields.io/npm/v/@yoskutik/mobx-form-schema",alt:"NPM version"}),(0,i.jsx)("img",{src:"https://img.shields.io/badge/EcmaScript-v.6-blue",alt:"EcmaScript 6"}),(0,i.jsx)("img",{src:"https://raw.githubusercontent.com/Yoskutik/mobx-form-schema/master/badges/weight.svg",alt:"Weight"}),(0,i.jsx)("img",{src:"https://img.shields.io/npm/l/@yoskutik/mobx-form-schema",alt:"License"}),(0,i.jsx)("img",{src:"https://img.shields.io/snyk/vulnerabilities/npm/@yoskutik/mobx-form-schema?label=Vulnerabilities",alt:"Vulnerabilities"}),(0,i.jsx)("img",{src:"https://raw.githubusercontent.com/Yoskutik/mobx-form-schema/master/badges/coverage-jest%20coverage.svg",alt:"Coverage"}),(0,i.jsx)("img",{src:"https://github.com/Yoskutik/mobx-form-schema/actions/workflows/build.yml/badge.svg",alt:"Build"})]}))})),ty=({children:e,sx:t})=>(0,i.jsx)(d.Z,Object.assign({component:"p",sx:Object.assign({fontSize:"1.3rem"},t)},{children:e})),tv=(0,l.memo)(()=>(0,i.jsxs)(c.Z,{children:[(0,i.jsx)(tj,{}),(0,i.jsxs)(c.Z,{children:[(0,i.jsx)(p,Object.assign({style:{height:220,alignItems:"center",padding:"1rem"}},{children:(0,i.jsxs)(c.Z,Object.assign({sx:{textAlign:"center"}},{children:[(0,i.jsx)(d.Z,Object.assign({variant:"h2",component:"h1"},{children:"MobX Form Schema"})),(0,i.jsx)(d.Z,Object.assign({variant:"h5",component:"h2",sx:{mt:2}},{children:"The simple way to organize you forms!"}))]}))})),(0,i.jsx)(p,{children:(0,i.jsxs)(h.Z,Object.assign({sx:{width:"800px",p:4,maxWidth:"95vw"}},{children:[(0,i.jsxs)(ty,{children:["Mobx Form Schema is a small library that can simplify forms developing process by providing a ",(0,i.jsx)("b",{children:"Form Schema"})," concept."]}),(0,i.jsxs)(ty,Object.assign({sx:{mt:2}},{children:["MobX Form Schema gives you a convenient way to describe your form - its ",(0,i.jsx)("b",{children:"validation"}),", "," ",(0,i.jsx)("b",{children:"presentation"}),", ",(0,i.jsx)("b",{children:"initialization"})," and ",(0,i.jsx)("b",{children:"observation"}),"."]})),(0,i.jsx)("hr",{style:{width:"60%",margin:"24px auto"}}),(0,i.jsxs)(ty,{children:["The developing process of forms may be quite repetitive - fields from different forms can have same validation rules; in order to understand whether the form is changed you have to manually check all the properties; etc. And ",(0,i.jsx)("i",{children:"MobX Form Schema"})," ",(0,i.jsx)("b",{children:"can help you with it!"})]}),(0,i.jsxs)(ty,Object.assign({sx:{mt:2}},{children:["With ",(0,i.jsx)("i",{children:"MobX Form Schema"})," you can:",(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{children:"simplify your validation;"}),(0,i.jsx)("li",{children:"automate changes observation;"}),(0,i.jsx)("li",{children:"configure form's presentation;"}),(0,i.jsx)("li",{children:"create rules for its initialization."})]})]}))]}))}),(0,i.jsx)(ek,{}),(0,i.jsx)(e5,{}),(0,i.jsx)(tm,{}),(0,i.jsx)(tg,{})]})]}));var tS=tv}}]);